spring.mvc.view.prefix= /
spring.mvc.view.suffix=.html
server.port=8080
server.error.path=/error


## 数据库连接
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?characterEncoding=utf8
#spring.datasource.username=root
#spring.datasource.password=root
##配置监控统计拦截的filters.去掉后监控界面sql将无法统计，wall用于防火墙
#spring.datasource.filters=stat,wall,log4j
##最大活跃数
#spring.datasource.maxActive=20
##初始化数量
#spring.datasource.initiaSize=1
##最大链接等待链接超时时间
#spring.datasource.maxWait=60000
##打开PSCache,并且指定每个链接PSCache的大小
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
##通过connectionProperties属性来打开mergeSql功能；慢sql记录
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#spring.datasource.minldle=1
##有两个含义： 1) Destroy线程会检测连接的间隔时间2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
#spring.datasource.timeBetweenEvictionRunMillis=60000
##最小的收回闲置的时间 5分钟
#spring.datasource.minEvictableIdleTimeMillis=300000
##用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
#spring.datasource.validationQuery=select 1 from dual
##建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
#spring.datasource.testWhileIdle=true
##申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
#spring.datasource.testOnBorrow=false
##归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
#spring.datasource.testOnReturn=false

